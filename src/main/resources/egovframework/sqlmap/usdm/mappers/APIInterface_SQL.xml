<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.usdm.service.impl.APIInterfaceMapper">

	<resultMap id="loginSession" type="egovframework.usdm.service.LoginSessionVO">
		<result property="userID" column="userID"/>
		<result property="userPW" column="userPW"/>
		<result property="sessionKey" column="sessionKey"/>
	</resultMap>
	
	<resultMap id="snGateway" type="egovframework.usdm.service.SNGatewayVO">
		<result property="gwID" column="gwID"/>
		<result property="GID" column="GID"/>
		<result property="url" column="url"/>
		<result property="manufacturer" column="manufacturer"/>
		<result property="productNo" column="productNo"/>
		<result property="location" column="location"/>
		<result property="longitude" column="longitude"/>
		<result property="latitude" column="latitude"/>
		<result property="altitude" column="altitude"/>
		<result property="dateTime" column="numPixel"/>
		<result property="supportedTransportProtocolList" column="supportedTransportProtocolList"/>
		<result property="supportedTransportConnectionControlList" column="supportedTransportConnectionControlList"/>
		<result property="supportedTransportDirectionList" column="supportedTransportDirectionList"/>
		<result property="supportedOperationList" column="supportedOperationList"/>
		<result property="supportedAttributeList" column="supportedAttributeList"/>
		<result property="supportedSensorServiceCenterList" column="supportedSensorServiceCenterList"/>
		<result property="monitoringMode" column="monitoringMode"/>
		<result property="monitoringPeriod" column="monitoringPeriod"/>
		<result property="statusCode" column="statusCode"/>
		<result property="deleteCode" column="deleteCode"/>
	</resultMap>

	<resultMap id="snPan" type="egovframework.usdm.service.SNPanVO">
		<result property="gwGID" column="gwGID"/>
		<result property="GID" column="GID"/>
		<result property="gwID" column="gwID"/>
		<result property="panID" column="panID"/>
		<result property="topology" column="topology"/>
		<result property="protocolStack" column="protocolStack"/>
		<result property="panChannel" column="panChannel"/>
		<result property="supportedChannelList" column="supportedChannelList"/>
		<result property="supportedTopologyList" column="supportedTopologyList"/>
		<result property="supportedProtocolStackList" column="supportedProtocolStackList"/>
		<result property="supportedOperationList" column="supportedOperationList"/>
		<result property="supportedAttributeList" column="supportedAttributeList"/>
		<result property="statusCode" column="statusCode"/>
		<result property="deleteCode" column="deleteCode"/>
	</resultMap>
	
	<resultMap id="snNode" type="egovframework.usdm.service.SNNodeVO">
		<result property="gwGID" column="gwGID"/>
		<result property="panGID" column="panGID"/>
		<result property="GID" column="GID"/>
		<result property="gwID" column="gwID"/>
		<result property="panID" column="panID"/>
		<result property="snID" column="snID"/>
		<result property="globalID" column="globalID"/>
		<result property="manufacturer" column="manufacturer"/>
		<result property="productNo" column="productNo"/>
		<result property="location" column="location"/>
		<result property="longitude" column="longitude"/>
		<result property="latitude" column="latitude"/>
		<result property="altitude" column="altitude"/>
		<result property="role" column="role"/>
		<result property="roleList" column="roleList"/>
		<result property="parentNodeIDList" column="parentNodeIDList"/>
		<result property="supportedOperationList" column="supportedOperationList"/>
		<result property="supportedAttributeList" column="supportedAttributeList"/>
		<result property="monitoringMode" column="monitoringMode"/>
		<result property="monitoringPeriod" column="monitoringPeriod"/>
		<result property="statusCode" column="statusCode"/>
		<result property="deleteCode" column="deleteCode"/>
	</resultMap>
	
	<resultMap id="snTransducer" type="egovframework.usdm.service.SNTransducerVO">
		<result property="gwGID" column="gwGID"/>
		<result property="panGID" column="panGID"/>
		<result property="snGID" column="snGID"/>
		<result property="GID" column="GID"/>
		<result property="gwID" column="gwID"/>
		<result property="panID" column="panID"/>
		<result property="snID" column="snID"/>
		<result property="tdID" column="tdID"/>
		<result property="manufacturer" column="manufacturer"/>
		<result property="productNo" column="productNo"/>
		<result property="transducerCategory" column="transducerCategory"/>
		<result property="transducerType" column="transducerType"/>
		<result property="unit" column="unit"/>
		<result property="dataType" column="dataType"/>
		<result property="rangeMin" column="rangeMin"/>
		<result property="rangeMax" column="rangeMax"/>
		<result property="rangeOffset" column="rangeOffset"/>
		<result property="level" column="level"/>
		<result property="supportedOperationList" column="supportedOperationList"/>
		<result property="supportedAttributeList" column="supportedAttributeList"/>
		<result property="statusCode" column="statusCode"/>
		<result property="actuationResult" column="actuationResult"/>
		<result property="deleteCode" column="deleteCode"/>
	</resultMap>
	
	<resultMap id="snSensingValue" type="egovframework.usdm.service.SNSensingValueVO">
		<result property="snGID" column="snGID"/>
		<result property="gwID" column="gwID"/>
		<result property="panID" column="panID"/>
		<result property="snID" column="snID"/>
		<result property="tdID" column="tdID"/>
		<result property="reportTime" column="reportTime"/>
		<result property="sensingTime" column="sensingTime"/>
		<result property="sensorType" column="sensorType"/>
		<result property="sensingValue" column="sensingValue"/>
		<result property="additionalCondition" column="additionalCondition"/>
		<result property="GID" column="GID"/>
	</resultMap>
	
	<resultMap id="snAssessValue" type="egovframework.usdm.service.SNAssessValueVO">
		<result property="category" column="category"/>
		<result property="type" column="type"/>
		<result property="date" column="date"/>
		<result property="value" column="value"/>
		<result property="longitude" column="longitude"/>
		<result property="latitude" column="latitude"/>
		<result property="altitude" column="altitude"/>
	</resultMap>
	
	<resultMap id="snSriGrid" type="egovframework.usdm.service.SNSriGridVO">
		<result property="cellID" column="cellID"/>
		<result property="minX" column="minX"/>
		<result property="minY" column="minY"/>
		<result property="maxX" column="maxX"/>
		<result property="maxY" column="maxY"/>
		<result property="waterSri" column="waterSri"/>
		<result property="drainSri" column="drainSri"/>
		<result property="subwaySri" column="subwaySri"/>
		<result property="geologySri" column="geologySri"/>
		<result property="lastUpdate" column="lastUpdate"/>
		<result property="minValue" column="minValue"/>
	</resultMap>
	
	<resultMap id="snAccident" type="egovframework.usdm.service.SNAccidentVO">
		<result property="ftrCde" column="ftrCde"/>
		<result property="ftrIdn" column="ftrIdn"/>
		<result property="longitude" column="longitude"/>
		<result property="latitude" column="latitude"/>
		<result property="altitude" column="altitude"/>
		<result property="address1" column="address1"/>
		<result property="address2" column="address2"/>
		<result property="address3" column="address3"/>
		<result property="address4" column="address4"/>
		<result property="accidentTime" column="accidentTime"/>
		<result property="accidentDepth" column="accidentDepth"/>
		<result property="accidentDegree" column="accidentDegree"/>
		<result property="accidentType" column="accidentType"/>
		<result property="accidentShape" column="accidentShape"/>
		<result property="accidentDesc" column="accidentDesc"/>
		<result property="geoTable" column="geoTable"/>
		<result property="accidentTable" column="accidentTable"/>
	</resultMap>
	
	<resultMap id="snGeoRelation" type="egovframework.usdm.service.SNGeoRelationVO">
		<result property="GID" column="GID"/>
		<result property="startTime" column="startTime"/>
		<result property="endTime" column="endTime"/>
		<result property="ftrCde" column="ftrCde"/>
		<result property="ftrIdn" column="ftrIdn"/>
		<result property="gwID" column="gwID"/>
		<result property="panID" column="panID"/>
		<result property="snID" column="snID"/>
		<result property="reason" column="reason"/>
		<result property="sensingTime" column="sensingTime"/>
		<result property="sensorType" column="sensorType"/>
		<result property="sensingValue" column="sensingValue"/>
	</resultMap>
	
	<resultMap id="snSri" type="egovframework.usdm.service.SNSriVO">
		<result property="geoID" column="geoID"/>
		<result property="roadType" column="roadType"/>
		<result property="complaintCount" column="complaintCount"/>
		<result property="recordPeriod" column="recordPeriod"/>
		<result property="leakSignal" column="leakSignal"/>
		<result property="pipeMove" column="pipeMove"/>
		<result property="internalState" column="internalState"/>
		<result property="emptySpace" column="emptySpace"/>
	</resultMap>
	
	<resultMap id="snFirmware" type="egovframework.usdm.service.SNFirmwareVO">
		<result property="firmwareID" column="firmwareID"/>
		<result property="targetDeviceType" column="targetDeviceType"/>
		<result property="manufacturerID" column="manufacturerID"/>
		<result property="majorVersion" column="majorVersion"/>
		<result property="minorVersion" column="minorVersion"/>
		<result property="description" column="description"/>
		<result property="dataSize" column="dataSize"/>
		<result property="binaryData" column="binaryData"/>
	</resultMap>
	
	<resultMap id="snFirmwareUpdateHistory" type="egovframework.usdm.service.SNFirmwareUpdateHistoryVO">
		<result property="firmwareID" column="firmwareID"/>
		<result property="targetID" column="targetID"/>
		<result property="transmissionTime" column="transmissionTime"/>
		<result property="transmissionResult" column="transmissionResult"/>
		<result property="updateType" column="updateType"/>
		<result property="updateTime" column="updateTime"/>
		<result property="recommended1BlockSize" column="recommended1BlockSize"/>
	</resultMap>

	<select id="validateSessionKey" parameterType="LoginSessionVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS validYn
			  FROM sdm_LoginSession
			 WHERE sessionKey = #{sessionKey}
		]]>
	</select>
	
	<select id="selectSensingValueQuery" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT a.gwID || ':' || a.panID || ':' || a.snID || ':' || a.tdID AS tdAddress
				 , a.sensingTime	AS sensingTime
				 , a.sensorType		AS sensorType
				 , a.sensingValue	AS sensingValue
			  FROM sdm_SensingValue a
			     , sdm_Node b
			 WHERE ('FF' = #{gwID}  OR a.gwID  = #{gwID})
			   AND ('FF' = #{panID} OR a.panID = #{panID})
			   AND ('FF' = #{snID}  OR a.snID  = #{snID})
			   AND ('FF' = #{tdID}  OR a.tdID  = #{tdID})
			   AND a.sensorType  = #{sensorType}
			   AND a.gwID		 = b.gwID
			   and a.panID		 = b.panID
			   and a.snID		 = b.snID
			   AND a.sensingTime = (SELECT MAX(sensingTime)
									  FROM sdm_SensingValue
									 WHERE gwID  = a.gwID
									   AND panID = a.panID
									   AND snID  = a.snID
									   AND tdID  = a.tdID )
			   ${additionalCondition}
		]]>
	</select>
	
	<select id="selectSensingValueLatest" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':' || panID || ':' || snID || ':' || tdID AS tdAddress
				 , sensingTime
				 , sensorType
				 , sensingValue
			  FROM sdm_SensingValueLatest
			 WHERE ('FF' = #{gwID}  OR gwID  = #{gwID})
			   AND ('FF' = #{panID} OR panID = #{panID})
			   AND ('FF' = #{snID}  OR snID  = #{snID})
			   AND ('FF' = #{tdID}  OR tdID  = #{tdID})
			   AND sensorType  = #{sensorType}
			   ${additionalCondition}
		]]>
	</select>
	
	<select id="selectSensingValueQueryByID" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT a.snGID			AS snGID
				 , a.sensingTime	AS sensingTime
				 , a.sensorType		AS sensorType
				 , a.sensingValue	AS sensingValue
			  FROM sdm_SensingValue a
			     , sdm_Node b
			 WHERE a.snGID    	 = #{GID}
			   AND a.sensorType  = #{sensorType}
			   AND a.snGID		 = b.GID
			   AND a.sensingTime = (SELECT MAX(sensingTime)
									  FROM sdm_SensingValue
									 WHERE snGID = a.snGID )
			   ${additionalCondition}
		]]>
	</select>
	
	<select id="selectSensingValueLatestByID" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT snGID
				 , sensingTime
				 , sensorType
				 , sensingValue
			  FROM sdm_SensingValueLatest
			 WHERE snGID      = #{GID}
			   AND sensorType  = #{sensorType}
			   ${additionalCondition}
		]]>
	</select>
	
	<select id="selectSensingValueSpatioTemporal" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT a.gwID || ':' || a.panID || ':' || a.snID || ':' || a.tdID AS tdAddress
				 , a.sensingTime	AS sensingTime
				 , a.sensorType		AS sensorType
				 , a.sensingValue	AS sensingValue
			  FROM sdm_SensingValue a
			     , sdm_Node b
			 WHERE ('FF' = #{gwID}  OR a.gwID  = #{gwID})
			   AND ('FF' = #{panID} OR a.panID = #{panID})
			   AND ('FF' = #{snID}  OR a.snID  = #{snID})
			   AND ('FF' = #{tdID}  OR a.tdID  = #{tdID})
			   AND a.sensorType  = #{sensorType}
			   AND a.gwID		 = b.gwID
			   and a.panID		 = b.panID
			   and a.snID		 = b.snID
			   ${additionalCondition}
			   ${temporalCondition}
			   ${spatialCondition}
		]]>
	</select>
	
	<select id="selectSensingValueSpatioTemporalByID" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT a.snGID			AS snGID
				 , a.sensingTime	AS sensingTime
				 , a.sensorType		AS sensorType
				 , a.sensingValue	AS sensingValue
			  FROM sdm_SensingValue a
			     , sdm_Node b
			 WHERE a.snGID		 = #{GID}
			   AND a.sensorType  = #{sensorType}
			   AND a.snGID		 = b.GID
			   ${additionalCondition}
			   ${temporalCondition}
			   ${spatialCondition}
		]]>
	</select>
	
	<select id="selectAccident" parameterType="SNAccidentVO" resultType="egovMap">
		<![CDATA[
			SELECT pipe_ftr_idn AS geoID
			     , longitude
			     , latitude
			     , ST_X(coordinate) AS x
			     , ST_Y(coordinate) AS y
			     , accidentTime
			     , accidentType
			     , accidentShape
			     , accidentDesc
			  FROM ${accidentTable}
			 WHERE pipe_ftr_idn = #{ftrIdn}
		]]>
	</select>
	
	<select id="selectAccidentByRegion" parameterType="SNAccidentVO" resultType="egovMap">
		<![CDATA[
			SELECT pipe_ftr_idn AS geoID
			     , longitude
			     , latitude
			     , ST_X(coordinate) AS x
			     , ST_Y(coordinate) AS y
			     , accidentTime
			     , accidentType
			     , accidentShape
			     , accidentDesc
			  FROM ${accidentTable}
			 ${spatialCondition}
		]]>
	</select>
	
	<select id="selectValueByGeoObject" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT a.ftr_idn     AS geoID
			     , a.nodeGID     AS snID
			     , b.sensorType
			     , b.sensingTime
			     , b.sensingValue
			  FROM sdm_NodeGeoRel a
			     , sdm_SensingValue b
			 WHERE a.ftr_idn      = #{ftrIdn}
			   AND a.ftr_cde = (SELECT ftr_cde FROM ${geoTable} WHERE ftr_idn = #{ftrIdn})
			   AND a.nodeGID      = b.snGID
			   AND b.sensorType   = #{sensorType}
			   AND b.sensingTime >= #{startTime}
			   AND b.sensingTime <= #{endTime}
			   ${additionalCondition}
		]]>
	</select>
	
	<select id="selectSewerMovingObject" parameterType="GeoVideoRelVO" resultType="egovMap">
		<![CDATA[
			SELECT a.videoID
			     , a.manhole_ftr_idn AS mhID
			     , a.directionAngle  AS direction
			     , TO_CHAR(a.recStartTime) AS startTime
			     , TO_CHAR(a.recEndTime)   AS endTime
			     , a.filePath
			     , a.fileName
			     , a.fileRealName
			     , a.distance
			  FROM sdm_DrainPipeVideo a
			     , sdm_DrainPipeVideoRel b
			 WHERE a.videoID       = b.videoID
			   AND b.ftr_idn       = #{ftrIdn}
			   AND a.recStartTime >= #{startTime}
			   AND a.recEndTime   <= #{endTime}
		]]>
	</select>
	<select id="selectSewerVideoGeoID" parameterType="GeoVideoRelVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn AS geoID
			  FROM sdm_DrainPipeVideoRel
			 WHERE videoID = #{videoID}
		]]>
	</select>
	<select id="selectSubwayMovingObject" parameterType="GeoVideoRelVO" resultType="egovMap">
		<![CDATA[
			SELECT a.videoID
			     , ''                AS mhID
			     , ''                AS direction
			     , TO_CHAR(a.recStartTime) AS startTime
			     , TO_CHAR(a.recEndTime)   AS endTime
			     , a.filePath
			     , a.fileName
			     , a.fileRealName
			     , a.distance
			  FROM sdm_RailroadVideo a
			     , sdm_RailroadVideoRel b
			 WHERE a.videoID       = b.videoID
			   AND b.ftr_idn       = #{ftrIdn}
			   AND a.recStartTime >= #{startTime}
			   AND a.recEndTime   <= #{endTime}
		]]>
	</select>
	<select id="selectSubwayVideoGeoID" parameterType="GeoVideoRelVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn AS geoID
			  FROM sdm_RailroadVideoRel
			 WHERE videoID = #{videoID}
		]]>
	</select>
	
	<select id="selectSriGrid" parameterType="snSriGridVO" resultType="egovMap">
		<![CDATA[
			SELECT cellID
			     , NVL(waterSri,0)       AS waterSri
			     , NVL(drainSri,0)       AS drainSri
			     , NVL(subwaySri,0)      AS subwaySri
			     , NVL(stationSri,0)     AS stationSri
			     , NVL(geologySri,0)     AS geologySri
			     , NVL(watergrade,' ')   AS watergrade
				 , NVL(draingrade,' ')   AS draingrade
				 , NVL(subwaygrade,' ')  AS subwaygrade
				 , NVL(stationgrade,' ') AS stationgrade
				 , NVL(geologygrade,' ') AS geologygrade
			  FROM sdm_SriGrid
			 WHERE ST_INTERSECTS(ST_GEOMFROMTEXT('POLYGON((${minX} ${minY}, ${maxX} ${minY}, ${maxX} ${maxY}, ${minX} ${maxY}, ${minX} ${minY}))',0), geom) = 1
			   AND LEAST(NVL(waterSri,999),NVL(drainSri,999),NVL(subwaySri,999),NVL(stationSri,999),NVL(geologySri,999)) >= ${minValue}
			   AND (waterSri IS NOT NULL
			     OR drainSri IS NOT NULL
			     OR subwaySri IS NOT NULL
			     OR stationSri IS NOT NULL
			     OR geologySri IS NOT NULL )
		]]>
	</select>
	
	<select id="selectXSriGrid" parameterType="SNSriGridVO" resultType="egovMap">
		<![CDATA[
			SELECT cellID
			     , NVL(waterSri,0)       AS waterSri
			     , NVL(drainSri,0)       AS drainSri
			     , NVL(subwaySri,0)      AS subwaySri
			     , NVL(stationSri,0)     AS stationSri
			     , NVL(geologySri,0)     AS geologySri
			     , NVL(watergrade,' ')   AS watergrade
				 , NVL(draingrade,' ')   AS draingrade
				 , NVL(subwaygrade,' ')  AS subwaygrade
				 , NVL(stationgrade,' ') AS stationgrade
				 , NVL(geologygrade,' ') AS geologygrade
			  FROM sdm_SRIGrid
			 WHERE cellID IN (${cellIDList})
		]]>
	</select>
	
	<select id="selectGatewayIDList" resultType="egovMap">
		<![CDATA[
			SELECT gwID
			  FROM sdm_Gateway
			 WHERE deleteCode = 0
		]]>
	</select>
	
	<select id="selectGatewayIDList2" resultType="egovMap">
		<![CDATA[
			SELECT GID
			  FROM sdm_Gateway
			 WHERE GID IS NOT NULL
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectGatewayDescription" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID
				 , url, manufacturer, productNo, location
				 , longitude, latitude, altitude, dateTime
				 , supportedTransportProtocolList, supportedTransportConnectionControlList
				 , supportedTransportDirectionList, supportedOperationList
				 , supportedAttributeList, supportedSensorServiceCenterList
				 , panIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Gateway
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectPanDescriptionByGwID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID
				 , topology, protocolStack, panChannel, supportedChannelList
				 , supportedTopologyList, supportedProtocolStackList, supportedOperationList
				 , supportedAttributeList, snIDList, nickName
			  FROM sdm_Pan
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectNodeDescriptionByGwID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID, snID
				 , globalID, manufacturer, productNo, location
				 , longitude, latitude, altitude, role, roleList
				 , parentNodeIDList, supportedOperationList, supportedAttributeList
				 , tdIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Node
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectTransducerDescriptionByGwID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList
			  FROM sdm_Transducer
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectPanDescription" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID
				 , topology, protocolStack, panChannel, supportedChannelList
				 , supportedTopologyList, supportedProtocolStackList, supportedOperationList
				 , supportedAttributeList, snIDList, nickName
			  FROM sdm_Pan
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectNodeDescriptionByPanID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID, snID
				 , globalID, manufacturer, productNo, location
				 , longitude, latitude, altitude, role, roleList
				 , parentNodeIDList, supportedOperationList, supportedAttributeList
				 , tdIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Node
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectTransducerDescriptionByPanID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList, nickName
			  FROM sdm_Transducer
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectNodeDescription" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID, snID
				 , globalID, manufacturer, productNo, location
				 , longitude, latitude, altitude, role, roleList
				 , parentNodeIDList, supportedOperationList, supportedAttributeList
				 , tdIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Node
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectTransducerDescriptionBySnID" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList, nickName
			  FROM sdm_Transducer
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectTransducerDescription" parameterType="SNTransducerVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList, nickName
			  FROM sdm_Transducer
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
			   AND tdID  = #{tdID}
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectGatewayDescriptionByGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID
				 , url, manufacturer, productNo, location
				 , longitude, latitude, altitude, dateTime
				 , supportedTransportProtocolList, supportedTransportConnectionControlList
				 , supportedTransportDirectionList, supportedOperationList
				 , supportedAttributeList, supportedSensorServiceCenterList
				 , panIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Gateway
			 WHERE GID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectPanDescriptionByGwGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID
				 , topology, protocolStack, panChannel, supportedChannelList
				 , supportedTopologyList, supportedProtocolStackList, supportedOperationList
				 , supportedAttributeList, snIDList, nickName
			  FROM sdm_Pan
			 WHERE gwGID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectNodeDescriptionByGwGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID, snID
				 , globalID, manufacturer, productNo, location
				 , longitude, latitude, altitude, role, roleList
				 , parentNodeIDList, supportedOperationList, supportedAttributeList
				 , tdIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Node
			 WHERE gwGID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectTransducerDescriptionByGwGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList, nickName
			  FROM sdm_Transducer
			 WHERE gwGID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectPanDescriptionByGID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID
				 , topology, protocolStack, panChannel, supportedChannelList
				 , supportedTopologyList, supportedProtocolStackList, supportedOperationList
				 , supportedAttributeList, snIDList, nickName
			  FROM sdm_Pan
			 WHERE GID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectNodeDescriptionByPanGID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID, snID
				 , globalID, manufacturer, productNo, location
				 , longitude, latitude, altitude, role, roleList
				 , parentNodeIDList, supportedOperationList, supportedAttributeList
				 , tdIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Node
			 WHERE panGID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectTransducerDescriptionByPanGID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList, nickName
			  FROM sdm_Transducer
			 WHERE panGID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectNodeDescriptionByGID" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT GID, gwID, panID, snID
				 , globalID, manufacturer, productNo, location
				 , longitude, latitude, altitude, role, roleList
				 , parentNodeIDList, supportedOperationList, supportedAttributeList
				 , tdIDList, monitoringMode, monitoringPeriod, nickName
			  FROM sdm_Node
			 WHERE GID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	<select id="selectTransducerDescriptionBySnGID" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList, nickName
			  FROM sdm_Transducer
			 WHERE snGID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectTransducerDescriptionByGID" parameterType="SNTransducerVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID, panID, snID, tdID
				 , manufacturer, productNo, transducerCategory, transducerType
				 , unit, dataType, rangeMin, rangeMax, rangeOffset, level
				 , supportedOperationList, supportedAttributeList, nickName
			  FROM sdm_Transducer
			 WHERE GID = #{GID}
			   AND deleteCode = 0
		]]>
	</select>
	
	<select id="selectGatewayStatus" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':0:0:0' AS address
			     , statusCode
			  FROM sdm_Gateway
			 WHERE gwID = #{gwID}
		]]>
	</select>
	
	<select id="selectGatewayStatusDescent" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':0:0:0' AS address
			     , statusCode
			  FROM sdm_Gateway
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
			 
			 UNION ALL
			 
			SELECT gwID || ':' || panID || ':0:0' AS address
				 , statusCode
			  FROM sdm_Pan
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
			 
			 UNION ALL

			SELECT gwID || ':' || panID || ':' || snID || ':0' AS address
				 , statusCode
			  FROM sdm_Node
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
			 
			 UNION ALL

			SELECT gwID || ':' || panID || ':' || snID || ':' || tdID AS address
				 , statusCode
			  FROM sdm_Transducer
			 WHERE ('FF' = #{gwID} OR gwID = #{gwID})
		]]>
	</select>
	
	<select id="selectPanStatus" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':' || panID || ':0:0' AS address
				 , statusCode
			  FROM sdm_Pan
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
		]]>
	</select>
	
	<select id="selectPanStatusDescent" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':' || panID || ':0:0' AS address
				 , statusCode
			  FROM sdm_Pan
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   
			 UNION ALL
			 
			SELECT gwID || ':' || panID || ':' || snID || ':0' AS address
				 , statusCode
			  FROM sdm_Node
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   
			 UNION ALL
			 
			SELECT gwID || ':' || panID || ':' || snID || ':' || tdID AS address
				 , statusCode
			  FROM sdm_Transducer
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
		]]>
	</select>
	
	<select id="selectNodeStatus" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':' || panID || ':' || snID || ':0' AS address
				 , statusCode
			  FROM sdm_Node
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
		]]>
	</select>
	
	<select id="selectNodeStatusDescent" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':' || panID || ':' || snID || ':0' AS address
				 , statusCode
			  FROM sdm_Node
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
			   
			 UNION ALL
			 
			SELECT gwID || ':' || panID || ':' || snID || ':' || tdID AS address
				 , statusCode
			  FROM sdm_Transducer
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
		]]>
	</select>
	
	<select id="selectTransducerStatus" parameterType="SNTransducerVO" resultType="egovMap">
		<![CDATA[
			SELECT gwID || ':' || panID || ':' || snID || ':' || tdID AS address
				 , statusCode
			  FROM sdm_Transducer
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
			   AND tdID  = #{tdID}
		]]>
	</select>
	
	<select id="selectGatewayStatusByGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
			     , statusCode
			  FROM sdm_Gateway
			 WHERE GID = #{GID}
		]]>
	</select>
	<select id="selectPanStatusByGwGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Pan
			 WHERE gwGID = #{GID}
		]]>
	</select>
	<select id="selectNodeStatusByGwGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Node
			 WHERE gwGID = #{GID}
		]]>
	</select>
	<select id="selectTransducerStatusByGwGID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Transducer
			 WHERE gwGID = #{GID}
		]]>
	</select>
	
	<select id="selectPanStatusByGID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Pan
			 WHERE GID = #{GID}
		]]>
	</select>
	<select id="selectNodeStatusByPanGID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Node
			 WHERE panGID = #{GID}
		]]>
	</select>
	<select id="selectTransducerStatusByPanGID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Transducer
			 WHERE panGID = #{GID}
		]]>
	</select>
	
	<select id="selectNodeStatusByGID" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Node
			 WHERE GID = #{GID}
		]]>
	</select>
	<select id="selectTransducerStatusBySnGID" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Transducer
			 WHERE snGID = #{GID}
		]]>
	</select>
	
	<select id="selectTransducerStatusByGID" parameterType="SNTransducerVO" resultType="egovMap">
		<![CDATA[
			SELECT GID
				 , statusCode
			  FROM sdm_Transducer
			 WHERE GID = #{GID}
		]]>
	</select>
	
	<select id="selectConnectivity" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT a.nodeGID AS snID
				 , a.ftr_idn AS geoID
				 , a.startTime
				 , a.endTime
				 , a.gwID || ':' || a.panID || ':' || a.snID AS snAddress
			  FROM sdm_NodeGeoRel a
			     , sdm_Node b
			 WHERE ('' = #{GID}    OR a.nodeGID = #{GID})
			   AND ('' = #{ftrIdn} OR a.ftr_idn = #{ftrIdn})
			   AND a.nodeGID = b.GID
			   ${temporalCondition}
		]]>
	</select>
	
	<select id="selectExistingNodeByRel" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_Node
			 WHERE GID = #{GID}
		]]>
	</select>
	
	<select id="selectExistingGeoByRel" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM ${geoTable}
			 WHERE ftr_idn = #{ftrIdn}
		]]>
	</select>
	
	<select id="selectExistingNodeGeoRelByGeoID" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_NodeGeoRel
			 WHERE ftr_idn = #{ftrIdn}
			   AND endTime = #{endTime}
		]]>
	</select>
	
	<select id="selectExistingNodeGeoRelBySnGID" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_NodeGeoRel
			 WHERE nodeGID = #{GID}
			   AND endTime = #{endTime}
		]]>
	</select>
	
	<select id="selectSnPosition" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT ST_X(position) AS x
				 , ST_Y(position) AS y
			  FROM sdm_Node
			 WHERE GID = #{GID}
		]]>
	</select>
	
	<select id="selectGeoPosition" parameterType="SNGeoRelationVO" resultType="egovMap">
		<![CDATA[
			SELECT ST_X(geom) AS x
				 , ST_Y(geom) AS y
			  FROM ${geoTable}
			 WHERE ftr_idn = #{ftrIdn}
		]]>
	</select>
		
	<update id="updateNodeGeoRelByGeoID" parameterType="SNGeoRelationVO">
		<![CDATA[
			UPDATE sdm_NodeGeoRel
			   SET nodeGID  = #{GID}
			     , gwID     = (SELECT gwID  FROM sdm_Node WHERE GID = #{GID})
			     , panID    = (SELECT panID FROM sdm_Node WHERE GID = #{GID})
			     , snID     = (SELECT snID  FROM sdm_Node WHERE GID = #{GID})
			     , position = (SELECT ST_POINTFROMTEXT('POINT(${X} ${Y})',0) FROM dual)
			 WHERE ftr_idn = #{ftrIdn}
			   AND endTime = #{endTime}
		]]>
	</update>
	
	<update id="updateNodeGeoRelBySnGID" parameterType="SNGeoRelationVO">
		<![CDATA[
			UPDATE sdm_NodeGeoRel
			   SET ftr_cde = (SELECT ftr_cde FROM ${geoTable} WHERE ftr_idn = #{ftrIdn})
			     , ftr_idn = #{ftrIdn}
			 WHERE nodeGID = #{GID}
			   AND endTime = #{endTime}
		]]>
	</update>
	
	<insert id="insertNodeGeoRelByGeoID" parameterType="SNGeoRelationVO">
		<![CDATA[
			INSERT INTO sdm_NodeGeoRel (
					nodeGID
				  , startTime
				  , endTime
				  , ftr_cde
				  , ftr_idn
				  , gwID
				  , panID
				  , snID
				  , position)
			VALUES (#{GID}
				  , #{currentTime}
				  , #{endTime}
				  , (SELECT ftr_cde FROM ${geoTable} WHERE ftr_idn = #{ftrIdn})
				  , #{ftrIdn}
				  , (SELECT gwID  FROM sdm_Node WHERE GID = #{GID})
				  , (SELECT panID FROM sdm_Node WHERE GID = #{GID})
				  , (SELECT snID  FROM sdm_Node WHERE GID = #{GID})
				  , ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
				  )
		]]>
	</insert>
	
	<insert id="insertNodeGeoRelBySnGID" parameterType="SNGeoRelationVO">
		<![CDATA[
			INSERT INTO sdm_NodeGeoRel (
					nodeGID
				  , startTime
				  , endTime
				  , ftr_cde
				  , ftr_idn
				  , gwID
				  , panID
				  , snID
				  , position)
			VALUES (#{GID}
				  , #{currentTime}
				  , #{endTime}
				  , 'NOCDE'
				  , #{ftrIdn}
				  , (SELECT gwID  FROM sdm_Node WHERE GID = #{GID})
				  , (SELECT panID FROM sdm_Node WHERE GID = #{GID})
				  , (SELECT snID  FROM sdm_Node WHERE GID = #{GID})
				  , ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
				  )
		]]>
	</insert>
	
	<update id="updateOldNodeGeoRelByGeoID" parameterType="SNGeoRelationVO">
		<![CDATA[
			UPDATE sdm_NodeGeoRel
			   SET endTime = #{currentTime}
			 WHERE ftr_idn = #{ftrIdn}
			   AND endTime = #{endTime}
		]]>
	</update>
	
	<update id="updateOldNodeGeoRelBySnGID" parameterType="SNGeoRelationVO">
		<![CDATA[
			UPDATE sdm_NodeGeoRel
			   SET endTime = #{currentTime}
			 WHERE nodeGID = #{GID}
			   AND endTime = #{endTime}
		]]>
	</update>
	
	<update id="updateSnAddressByRel" parameterType="SNGeoRelationVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET gwID      = #{gwID}
			     , panID     = #{panID}
			     , snID      = #{snID}
			     , longitude = #{longitude}
			     , latitude  = #{latitude}
			     , position  = ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
			 WHERE GID = #{GID}
		]]>
	</update>
	
	<update id="updateTdAddressByRel" parameterType="SNGeoRelationVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID  = #{gwID}
			     , panID = #{panID}
			     , snID  = #{snID}
			 WHERE snGID = #{GID}
		]]>
	</update>
	
	<select id="selectExistingGateway" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_Gateway
			 WHERE gwID = #{gwID}
		]]>
	</select>
	
	<select id="selectExistingGatewayByID" parameterType="SNGatewayVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_Gateway
			 WHERE GID = #{GID}
		]]>
	</select>
	
	<select id="selectExistingPan" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_Pan
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
		]]>
	</select>
	
	<select id="selectExistingPanByID" parameterType="SNPanVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_Pan
			 WHERE GID = #{GID}
		]]>
	</select>
	
	<select id="selectExistingNode" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_Node
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
		]]>
	</select>
	
	<select id="selectExistingNodeByID" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_Node
			 WHERE GID = #{GID}
		]]>
	</select>
	
	<select id="selectExistingTransducer" parameterType="SNTransducerVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_Transducer
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
			   AND tdID  = #{tdID}
		]]>
	</select>
	
	<update id="updateGwDescription" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Gateway
			   SET gwID 		= #{newGwID}
				 , nickName 	= #{nickName}
				 , longitude	= #{longitude}
				 , latitude		= #{latitude}
		  		 , altitude		= #{altitude}
				 , position		= ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
			 WHERE gwID = #{gwID}
		]]>
	</update>
	<update id="updatePanGwID" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Pan
			   SET gwID = #{newGwID}
			 WHERE gwID = #{gwID}
		]]>
	</update>
	<update id="updateNodeGwID" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET gwID = #{newGwID}
			 WHERE gwID = #{gwID}
		]]>
	</update>
	<update id="updateTransducerGwID" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID = #{newGwID}
			 WHERE gwID = #{gwID}
		]]>
	</update>
	
	<update id="updateGwDescriptionByID" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Gateway
			   SET gwID 		= #{newGwID}
				 , nickName 	= #{nickName}
				 , longitude	= #{longitude}
				 , latitude		= #{latitude}
		  		 , altitude		= #{altitude}
				 , position		= ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
			 WHERE GID = #{GID}
		]]>
	</update>
	<update id="updatePanGwIDByID" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Pan
			   SET gwID = #{newGwID}
			 WHERE gwGID = #{GID}
		]]>
	</update>
	<update id="updateNodeGwIDByID" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET gwID = #{newGwID}
			 WHERE gwGID = #{GID}
		]]>
	</update>
	<update id="updateTransducerGwIDByID" parameterType="SNGatewayVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID = #{newGwID}
			 WHERE gwGID = #{GID}
		]]>
	</update>
	
	<update id="updatePanDescription" parameterType="SNPanVO">
		<![CDATA[
			UPDATE sdm_Pan
			   SET gwID 	= #{newGwID}
				 , panID	= #{newPanID}
				 , nickName	= #{nickName}
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
		]]>
	</update>
	<update id="updateNodePanID" parameterType="SNPanVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET gwID  = #{newGwID}
			     , panID = #{newPanID}
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
		]]>
	</update>
	<update id="updateTransducerPanID" parameterType="SNPanVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID  = #{newGwID}
			     , panID = #{newPanID}
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
		]]>
	</update>
	
	<update id="updatePanDescriptionByID" parameterType="SNPanVO">
		<![CDATA[
			UPDATE sdm_Pan
			   SET gwID 	= #{newGwID}
				 , panID	= #{newPanID}
				 , nickName	= #{nickName}
			 WHERE GID = #{GID}
		]]>
	</update>
	<update id="updateNodePanIDByID" parameterType="SNPanVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET gwID  = #{newGwID}
			     , panID = #{newPanID}
			 WHERE panGID = #{GID}
		]]>
	</update>
	<update id="updateTransducerPanIDByID" parameterType="SNPanVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID  = #{newGwID}
			     , panID = #{newPanID}
			 WHERE panGID = #{GID}
		]]>
	</update>
	
	<update id="updateSnDescription" parameterType="SNNodeVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET gwID 		= #{newGwID}
				 , panID 		= #{newPanID}
				 , snID 		= #{newSnID}
				 , nickName 	= #{nickName}
				 , longitude	= #{longitude}
				 , latitude		= #{latitude}
		  		 , altitude		= #{altitude}
				 , position		= ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
		]]>
	</update>
	<update id="updateTransducerSnID" parameterType="SNNodeVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID  = #{newGwID}
			     , panID = #{newPanID}
			     , snID  = #{newSnID}
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
		]]>
	</update>
	
	<update id="updateSnDescriptionByID" parameterType="SNNodeVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET gwID 		= #{newGwID}
				 , panID 		= #{newPanID}
				 , snID 		= #{newSnID}
				 , nickName 	= #{nickName}
				 , longitude	= #{longitude}
				 , latitude		= #{latitude}
		  		 , altitude		= #{altitude}
				 , position		= ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
			 WHERE GID = #{GID}
		]]>
	</update>
	<update id="updateTransducerSnIDByID" parameterType="SNNodeVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID  = #{newGwID}
			     , panID = #{newPanID}
			     , snID  = #{newSnID}
			 WHERE snGID = #{GID}
		]]>
	</update>
	
	<update id="updateTdDescription" parameterType="SNTransducerVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID 	= #{newGwID}
				 , panID 	= #{newPanID}
				 , snID 	= #{newSnID}
				 , tdID 	= #{newTdID}
				 , nickName	= #{nickName}
			 WHERE gwID  = #{gwID}
			   AND panID = #{panID}
			   AND snID  = #{snID}
			   AND tdID  = #{tdID}
		]]>
	</update>
	
	<update id="updateTdDescriptionByID" parameterType="SNTransducerVO">
		<![CDATA[
			UPDATE sdm_Transducer
			   SET gwID 	= #{newGwID}
				 , panID 	= #{newPanID}
				 , snID 	= #{newSnID}
				 , tdID 	= #{newTdID}
				 , nickName	= #{nickName}
			 WHERE GID = #{GID}
		]]>
	</update>

	<select id="selectExistingAccidentGeo" parameterType="SNAccidentVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM ${geoTable}
			 WHERE ftr_idn = #{ftrIdn}
		]]>
	</select>
	
	<select id="selectExistingAccident" parameterType="SNAccidentVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM ${accidentTable}
			 WHERE pipe_ftr_cde = (SELECT ftr_cde FROM ${geoTable} WHERE ftr_idn = #{ftrIdn})
			   AND pipe_ftr_idn = #{ftrIdn}
			   AND longitude    = #{longitude}
			   AND latitude     = #{latitude}
			   AND accidentTime = #{accidentTime}
		]]>
	</select>
	
	<insert id="insertAccident" parameterType="SNAccidentVO">
		<![CDATA[
			INSERT INTO ${accidentTable} (
						pipe_ftr_cde
					  , pipe_ftr_idn
					  , longitude
					  , latitude
					  , coordinate
					  , accidentTime
					  , accidentDepth
					  , accidentDegree
					  , accidentType
					  , accidentShape
					  , accidentDesc
					  )
				VALUES (
					    (SELECT ftr_cde FROM ${geoTable} WHERE ftr_idn = #{ftrIdn})
					  , #{ftrIdn}
					  , #{longitude}
					  , #{latitude}
					  , ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
					  , #{accidentTime}
					  , #{accidentDepth}
					  , #{accidentDegree}
					  , #{accidentType}
					  , #{accidentShape}
					  , #{accidentDesc}
					  )  
		]]>
	</insert>
	
	<select id="selectExistingThreshold" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_SensingValueThreshold
			 WHERE sensorType = #{sensorType}
		]]>
	</select>
	<insert id="insertThreshold" parameterType="SNSensingValueVO">
		<![CDATA[
			INSERT INTO sdm_SensingValueThreshold (
						sensorType
					  , operator1
					  , operand1
					  , logicalOp
					  , operator2
					  , operand2
					  )
				VALUES (
					    #{sensorType}
					  , #{operator1}
					  , #{operand1}
					  , #{logicalOp}
					  , #{operator2}
					  , #{operand2}
					  )  
		]]>
	</insert>
	<update id="updateThreshold" parameterType="SNSensingValueVO">
		<![CDATA[
			UPDATE sdm_SensingValueThreshold
			   SET operator1 = #{operator1}
			     , operand1  = #{operand1}
			     , logicalOp = #{logicalOp}
			     , operator2 = #{operator2}
			     , operand2  = #{operand2}
		]]>
	</update>
	
	<select id="selectExistingLeakThreshold" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_LeakageThreshold
			 WHERE snGID             = #{GID}
               AND UPPER(sensorType) = UPPER(#{sensorType})
		]]>
	</select>
	<insert id="insertLeakThreshold" parameterType="SNSensingValueVO">
		<![CDATA[
			INSERT INTO sdm_LeakageThreshold (
						snGID
					  , sensorType
					  , operator
					  , operand
					  , counter
					  , counterLimit
					  )
				VALUES (
					    #{GID}
					  , #{sensorType}
					  , #{operator1}
					  , #{operand1}
					  , 0
					  , #{counter}
					  )  
		]]>
	</insert>
	<update id="updateLeakThreshold" parameterType="SNSensingValueVO">
		<![CDATA[
			UPDATE sdm_LeakageThreshold
			   SET operator     = #{operator1}
			     , operand      = #{operand1}
			     , counterLimit = #{counter}
			 WHERE snGID             = #{GID}
               AND UPPER(sensorType) = UPPER(#{sensorType})
		]]>
	</update>
	
	<select id="selectExistingWaterManholePipeRel" parameterType="manholePipeRelVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'), 'N') AS existYn
			  FROM sdm_WaterPipeManholeRel
			 WHERE manhole_ftr_idn = #{manholeFtrIdn}
			   AND pipe_ftr_idn    = #{pipeFtrIdn}
		]]>
	</select>
	<insert id="insertWaterManholePipeRel" parameterType="manholePipeRelVO">
		<![CDATA[
			INSERT INTO sdm_WaterPipeManholeRel (
						manhole_ftr_cde
				 	  , manhole_ftr_idn
					  , pipe_ftr_cde
					  , pipe_ftr_idn
					  )
				VALUES (
					    (SELECT ftr_cde FROM sdm_WaterManhole WHERE ftr_idn = #{manholeFtrIdn})
					  , #{manholeFtrIdn}
					  , (SELECT ftr_cde FROM sdm_WaterPipe WHERE ftr_idn = #{pipeFtrIdn})
					  , #{pipeFtrIdn}
					  )  
		]]>
	</insert>
	
	<select id="selectWaterManholePipeRel" parameterType="manholePipeRelVO" resultType="egovMap">
		<![CDATA[
			SELECT pipe_ftr_idn
			  FROM sdm_WaterPipeManholeRel
			 WHERE manhole_ftr_idn = #{manholeFtrIdn}
		]]>
	</select>
	
	<select id="selectWaterManholeList" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn        AS geoID
				 , ST_Y(geom)     AS Y
				 , ST_X(geom)     AS X
				 , RTRIM(dpg_std) AS dpgstd
				 , RTRIM(som_cde) AS somcde
				 , RTRIM(mhs_cde) AS mhscde
			  FROM ${geoTable}
		     ${spatialCondition}
		]]>
	</select>
	<select id="selectGeoobjectList" parameterType="SNSensingValueVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn    AS geoID
				 , ST_Y(geom) AS Y
				 , ST_X(geom) AS X
			  FROM ${geoTable}
		     ${spatialCondition}
		]]>
	</select>
	
	<insert id="insertFirmwareData" parameterType="SNFirmwareVO">
		<![CDATA[
			INSERT INTO sdm_FirmwareData (
						targetDeviceType
					  , manufacturerID
					  , majorVersion
					  , minorVersion
					  , description
					  , dataSize
					  , binaryData
					  )
				VALUES (
					    #{targetDeviceType}
					  , #{manufacturerID}
					  , #{majorVersion}
					  , #{minorVersion}
					  , #{description}
					  , #{dataSize}
					  , #{binaryData}
					  )
		]]>
	</insert>
	
	<select id="selectLatestFirmwareID" parameterType="SNFirmwareVO" resultType="egovMap">
		<![CDATA[
			SELECT MAX(firmwareID) AS firmwareID
			  FROM sdm_FirmwareData
		]]>
	</select>
	
	<select id="selectFirmwareList" parameterType="SNFirmwareVO" resultType="egovMap">
		<![CDATA[
			SELECT firmwareID
				 , targetDeviceType
				 , manufacturerID
				 , majorVersion
				 , minorVersion
				 , description
			  FROM sdm_FirmwareData
		     WHERE (-1 = #{targetDeviceType} OR targetDeviceType = #{targetDeviceType})
		       AND (-1 = #{manufacturerID}   OR manufacturerID   = #{manufacturerID})
		       AND (-1 = #{majorVersion}     OR majorVersion     = #{majorVersion})
		       AND (-1 = #{minorVersion}     OR minorVersion     = #{minorVersion})
		]]>
	</select>
	
	<select id="selectFirmwareData" parameterType="SNFirmwareVO" resultType="egovMap">
		<![CDATA[
			SELECT targetDeviceType
				 , manufacturerID
				 , majorVersion
				 , minorVersion
				 , description
				 , dataSize
				 , TO_CHAR(binaryData) AS binarydata
			  FROM sdm_FirmwareData
		     WHERE firmwareID = #{firmwareID}
		]]>
	</select>
	
	<select id="selectExistingFirmwareData" parameterType="SNFirmwareVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_FirmwareData
		     WHERE firmwareID = #{firmwareID}
		]]>
	</select>
	
	<delete id="deleteFirmwareData" parameterType="SNFirmwareVO">
		<![CDATA[
			DELETE sdm_FirmwareData
		     WHERE firmwareID = #{firmwareID}
		]]>
	</delete>

	<select id="selectExistingFirmwareUpdateHistory" parameterType="SNFirmwareUpdateHistoryVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_FirmwareUpdateHistory
		     WHERE gwID             = #{gwID}
		       AND targetID         = #{targetID}
		       AND transmissionTime = #{transmissionTime}
		]]>
	</select>
	<insert id="insertFirmwareUpdateHistory" parameterType="SNFirmwareUpdateHistoryVO">
		<![CDATA[
			INSERT INTO sdm_FirmwareUpdateHistory (
			            gwID
			          , targetID
			          , transmissionTime
			          , transmissionResult
			          , firmwareID
					  , updateType
					  , updateTime
					  , recommended1BlockSize
					  )
				VALUES (
					    #{gwID}
					  , #{targetID}
					  , #{transmissionTime}
					  , #{transmissionResult}
					  , #{firmwareID}
					  , #{updateType}
					  , #{updateTime}
					  , #{recommended1BlockSize}
					  )
		]]>
	</insert>
		
	<select id="selectFirmwareUpdateHistory" parameterType="SNFirmwareUpdateHistoryVO" resultType="egovMap">
		<![CDATA[
			SELECT a.gwID
			     , a.transmissionTime
			     , MAX(a.transmissionResult)    AS transmissionResult
			     , MAX(a.firmwareID)            AS firmwareID
			     , MAX(b.targetDeviceType)      AS targetDeviceType
			     , MAX(b.manufacturerID)        AS manufacturerID
			     , MAX(b.majorVersion)          AS majorVersion
			     , MAX(b.minorVersion)          AS minorVersion
			     , MAX(a.updateType)            AS updateType
			     , MAX(a.updateTime)            AS updateTime
			     , MAX(a.recommended1BlockSize) AS recommended1BlockSize
			  FROM sdm_FirmwareUpdateHistory a
			     , sdm_FirmwareData b
		     WHERE a.firmwareID = b.firmwareID
		     ${gwIDCondition}
		     ${targetCondition}
		     ${temporalCondition}
		  GROUP BY a.gwID, a.transmissionTime
		]]>
	</select>
	<select id="selectFirmwareUpdateHistoryTargetList" parameterType="SNFirmwareUpdateHistoryVO" resultType="egovMap">
		<![CDATA[
			SELECT targetID
			  FROM sdm_FirmwareUpdateHistory
		     WHERE gwID             = #{gwID}
		       AND transmissionTime = #{transmissionTime}
		]]>
	</select>
	
	<select id="selectExistingUserDefinedMessage" parameterType="UserDefinedMessageVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_UserDefinedMessage
		     WHERE targetID         = #{targetID}
		       AND transmissionTime = #{transmissionTime}
		]]>
	</select>
	<insert id="insertUserDefinedMessage" parameterType="UserDefinedMessageVO">
		<![CDATA[
			INSERT INTO sdm_UserDefinedMessage (
			            targetID
			          , transmissionTime
			          , commandID
			          , transmissionDirection
			          , transmissionResult
			          , dataSize
					  , binaryData
					  )
				VALUES (
					    #{targetID}
					  , #{transmissionTime}
					  , #{commandID}
					  , #{transmissionDirection}
					  , #{transmissionResult}
					  , #{messageDataSize}
					  , #{messageBinaryData}
					  )
		]]>
	</insert>
	
	<select id="selectUserDefinedMessage" parameterType="UserDefinedMessageVO" resultType="egovMap">
		<![CDATA[
			SELECT targetID
			     , commandID
			     , transmissionDirection
			     , transmissionResult
			     , transmissionTime
			     , dataSize
			     , TO_CHAR(binaryData) AS binaryData
			  FROM sdm_UserDefinedMessage
		     WHERE targetID = #{targetID}
		       ${temporalCondition}
		  ORDER BY transmissionTime DESC
		]]>
	</select>
	
	<select id="selectExistingTdDefault" parameterType="SNTransducerVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_TransducerDefault
		     WHERE tdID = #{tdID}
		]]>
	</select>
	
	<insert id="insertTdDefault" parameterType="SNTransducerVO">
		<![CDATA[
			INSERT INTO sdm_TransducerDefault (
						tdID
					  , manufacturer
					  , productNo
					  , transducerCategory
					  , transducerType
					  , unit
					  , dataType
					  , rangeMin
					  , rangeMax
					  , rangeOffset
					  , level
					  )
				VALUES (
					    #{tdID}
					  , #{manufacturer}
					  , #{productNo}
					  , #{transducerCategory}
					  , #{transducerType}
					  , #{unit}
					  , #{dataType}
					  , #{rangeMin}
					  , #{rangeMax}
					  , #{rangeOffset}
					  , #{level}
					  )  
		]]>
	</insert>
	
	<select id="selectTdDefault" parameterType="SNTransducerVO" resultType="egovMap">
		<![CDATA[
			SELECT tdID
			     , manufacturer
			     , productNo
			     , transducerCategory
			  	 , transducerType
				 , unit
				 , dataType
				 , rangeMin
				 , rangeMax
				 , rangeOffset
				 , level
			  FROM sdm_TransducerDefault
			 ${tdIDCondition}
		]]>
	</select>
	
	<update id="updateTdDefault" parameterType="SNTransducerVO">
		<![CDATA[
			UPDATE sdm_TransducerDefault
			   SET manufacturer	      = NVL(#{manufacturer},       manufacturer)
				 , productNo	      = NVL(#{productNo},          productNo)
				 , transducerCategory = NVL(#{transducerCategory}, transducerCategory)
				 , transducerType     = NVL(#{transducerType},     transducerType)
				 , unit	              = NVL(#{unit},               unit)
				 , dataType	          = NVL(#{dataType},           dataType)
				 , rangeMin	          = NVL(${rangeMin},           rangeMin)
				 , rangeMax	          = NVL(${rangeMax},           rangeMax)
				 , rangeOffset        = NVL(${rangeOffset},        rangeOffset)
				 , level	          = NVL(#{level},              level)
			 WHERE tdID = #{tdID}
		]]>
	</update>
	
	<delete id="deleteTdDefault" parameterType="SNTransducerVO">
		<![CDATA[
			DELETE sdm_TransducerDefault
		     WHERE tdID = #{tdID}
		]]>
	</delete>
	
	<select id="getWaterBSRIByID" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn AS geoID
			     , wtl_sri AS BSRI
			     , wtl_lev AS level
			     , wtl_sta AS indirectAssess
			     , lek_sig AS leakNoise
			     , pip_mov AS pipeMove
			  FROM sdm_WaterPipeSri
			 WHERE ftr_idn IN (${geoID})
			   AND wtl_sri IS NOT NULL
		]]>
	</select>
	<select id="getWaterBSRIByRegion" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT b.ftr_idn AS geoID
			     , b.wtl_sri AS BSRI
			     , b.wtl_lev AS level
			     , b.wtl_sta AS indirectAssess
			     , b.lek_sig AS leakNoise
			     , b.pip_mov AS pipeMove 
			  FROM sdm_WaterPipe a
			     , sdm_WaterPipeSri b
			 WHERE a.ftr_idn = b.ftr_idn
			   AND ST_INTERSECTS(ST_GEOMFROMTEXT('POLYGON((${minX} ${minY}, ${maxX} ${minY}, ${maxX} ${maxY}, ${minX} ${maxY}, ${minX} ${minY}))',0), a.geom) = 1
			   AND b.wtl_sri IS NOT NULL
		]]>
	</select>
	
	<select id="getSewerBSRIByID" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn AS geoID
			     , sew_sri AS BSRI
			     , sew_lev AS level
			     , sew_sta AS indirectAssess
			     , NVL(sew_ctv,0) AS internalState
			     , NVL(sew_gpr,0) AS emptySpace
			  FROM sdm_DrainPipeSri
			 WHERE ftr_idn IN (${geoID})
			   AND sew_sri IS NOT NULL
		]]>
	</select>
	<select id="getSewerBSRIByRegion" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT b.ftr_idn AS geoID
			     , b.sew_sri AS BSRI
			     , b.sew_lev AS level 
			     , b.sew_sta AS indirectAssess
			     , NVL(b.sew_ctv,0) AS internalState
			     , NVL(b.sew_gpr,0) AS emptySpace
			  FROM sdm_DrainPipe a
			     , sdm_DrainPipeSri b
			 WHERE a.ftr_idn = b.ftr_idn
			   AND ST_INTERSECTS(ST_GEOMFROMTEXT('POLYGON((${minX} ${minY}, ${maxX} ${minY}, ${maxX} ${maxY}, ${minX} ${maxY}, ${minX} ${minY}))',0), a.geom) = 1
			   AND b.sew_sri IS NOT NULL   
		]]>
	</select>
	
	<select id="getSubwayBSRIByID" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn AS geoID
			     , met_sri AS BSRI
			     , met_lev AS level
			     , grd_cde AS structureGrade
			     , des_typ AS designType
			     , max_dep AS maxDepth
			     , SUBSTR(SYSDATE,0,4) - cmp_ymd + 1 AS duration
			     , grd_50  AS groundCount
			     , rod_50  AS roadCount
			     , nea_dis AS evaDistance
			     , nea_dep AS evaDepth
			     , col_wel AS collectingWell
			  FROM sdm_SubwayLineSri
			 WHERE ftr_idn IN (${geoID})
			   AND met_sri IS NOT NULL
		]]>
	</select>
	<select id="getSubwayBSRIByRegion" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT b.ftr_idn AS geoID
			     , b.met_sri AS BSRI
			     , b.met_lev AS level
			     , b.grd_cde AS structureGrade
			     , b.des_typ AS designType
			     , b.max_dep AS maxDepth
			     , SUBSTR(SYSDATE,0,4) - b.cmp_ymd + 1 AS duration
			     , b.grd_50  AS groundCount
			     , b.rod_50  AS roadCount
			     , b.nea_dis AS evaDistance
			     , b.nea_dep AS evaDepth
			     , b.col_wel AS collectingWell
			  FROM sdm_SubwayLine a
			     , sdm_SubwayLineSri b
			 WHERE a.ftr_idn = b.ftr_idn
			   AND ST_INTERSECTS(ST_GEOMFROMTEXT('POLYGON((${minX} ${minY}, ${maxX} ${minY}, ${maxX} ${maxY}, ${minX} ${maxY}, ${minX} ${minY}))',0), a.geom) = 1
			   AND b.met_sri IS NOT NULL   
		]]>
	</select>
	
	<select id="getStationBSRIByID" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_idn AS geoID
			     , sta_sri AS BSRI
			     , sta_lev AS level
			     , max_dep AS maxDepth
			     , SUBSTR(SYSDATE,0,4) - cmp_ymd + 1 AS duration
			     , grd_50  AS groundCount
			     , rod_50  AS roadCount
			     , nea_dis AS evaDistance
			     , nea_dep AS evaDepth
			     , col_wel AS collectingWell
			  FROM sdm_SubwayStationSri
			 WHERE ftr_idn IN (${geoID})
			   AND sta_sri IS NOT NULL
		]]>
	</select>
	<select id="getStationBSRIByRegion" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT b.ftr_idn AS geoID
			     , b.sta_sri AS BSRI
			     , b.sta_lev AS level
			     , b.max_dep AS maxDepth
			     , SUBSTR(SYSDATE,0,4) - b.cmp_ymd + 1 AS duration
			     , b.grd_50  AS groundCount
			     , b.rod_50  AS roadCount
			     , b.nea_dis AS evaDistance
			     , b.nea_dep AS evaDepth
			     , b.col_wel AS collectingWell
			  FROM sdm_SubwayStation a
			     , sdm_SubwayStationSri b
			 WHERE a.ftr_idn = b.ftr_idn
			   AND ST_INTERSECTS(ST_GEOMFROMTEXT('POLYGON((${minX} ${minY}, ${maxX} ${minY}, ${maxX} ${maxY}, ${minX} ${maxY}, ${minX} ${minY}))',0), a.geom) = 1
			   AND b.sta_sri IS NOT NULL   
		]]>
	</select>

	<select id="selectExistingWaterSri" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_WaterPipeSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateWaterBSRIByID" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_WaterPipeSri
			   SET rod_typ = #{roadType}
			     , rct_cnt = #{complaintCount}
			     , pip_mat = #{recordPeriod}
			     , lek_sig = #{leakSignal}
			     , pip_mov = #{pipeMove}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectWaterPipeSRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT *
			  FROM sdm_WaterPipeSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateWaterPipeSRI" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_WaterPipeSri
			   SET wtl_sta = #{assessValue}
			     , wtl_sri = #{sriValue}
			     , wtl_lev = #{sriGrade}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectExistingSewerSri" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_DrainPipeSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateSewerBSRIByID" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_DrainPipeSri
			   SET rod_typ = #{roadType}
			     , pip_mat = #{recordPeriod}
			     , sew_ctv = #{internalState}
			     , sew_gpr = #{emptySpace}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectDrainPipeSRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT *
			  FROM sdm_DrainPipeSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateDrainPipeSRI" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_DrainPipeSri
			   SET sew_sta = #{assessValue}
			     , sew_sri = #{sriValue}
			     , sew_lev = #{sriGrade}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectExistingSubwaySri" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_SubwayLineSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateSubwayBSRIByID" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_SubwayLineSri
			   SET grd_cde = #{structureGrade}
			     , grd_50  = #{groundCount50}
			     , grd_100 = #{groundCount100}
			     , grd_200 = #{groundCount200}
			     , rod_50  = #{roadCount50}
			     , rod_100 = #{roadCount100}
			     , rod_200 = #{roadCount200}
			     , nea_dis = #{evaDistance}
			     , nea_dep = #{evaDepth}
			     , col_wel = #{collectingWell}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectSubwayLineSRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT *
			  FROM sdm_SubwayLineSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateSubwayLineSRI" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_SubwayLineSri
			   SET met_sri = #{sriValue}
			     , met_lev = #{sriGrade}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectExistingStationSri" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_SubwayStationSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateStationBSRIByID" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_SubwayStationSri
			   SET grd_50  = #{groundCount50}
			     , grd_100 = #{groundCount100}
			     , grd_200 = #{groundCount200}
			     , rod_50  = #{roadCount50}
			     , rod_100 = #{roadCount100}
			     , rod_200 = #{roadCount200}
			     , nea_dis = #{evaDistance}
			     , nea_dep = #{evaDepth}
			     , col_wel = #{collectingWell}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectSubwayStationSRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT *
			  FROM sdm_SubwayStationSri
			 WHERE ftr_idn = #{geoID}
		]]>
	</select>
	<update id="updateSubwayStationSRI" parameterType="SNSriVO">
		<![CDATA[
			UPDATE sdm_SubwayStationSri
			   SET sta_sri = #{sriValue}
			     , sta_lev = #{sriGrade}
			 WHERE ftr_idn = #{geoID}
		]]>
	</update>
	
	<select id="selectGridWaterSRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT a.cellid
			     , MAX(c.wtl_sri) as sri
			  FROM sdm_SriGrid a
                 , sdm_WaterPipe b
                 , sdm_WaterPipeSri c
             WHERE a.cellid IN (SELECT b.cellid
                                  FROM sdm_WaterPipe a
                                     , sdm_SriGrid b
                                 WHERE a.ftr_idn = #{geoID}
                                   AND ST_INTERSECTS(a.geom, b.geom) = 1 )
               AND ST_INTERSECTS(a.geom, b.geom) = 1
               AND b.ftr_idn = c.ftr_idn
          GROUP BY a.cellid
		]]>
	</select>
	<update id="updateGridWaterSRI" parameterType="SNSriGridVO">
		<![CDATA[
			UPDATE sdm_SriGrid
               SET waterSri   = #{sri}
                 , waterGrade = #{grade}
                 , lastUpdate = #{lastUpdate}
             WHERE cellID = #{cellID}
		]]>
	</update>
	<select id="selectGridDrainSRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT a.cellid
			     , MAX(c.sew_sri) as sri
			  FROM sdm_SriGrid a
                 , sdm_DrainPipe b
                 , sdm_DrainPipeSri c
             WHERE a.cellid IN (SELECT b.cellid
                                  FROM sdm_DrainPipe a
                                     , sdm_SriGrid b
                                 WHERE a.ftr_idn = #{geoID}
                                   AND ST_INTERSECTS(a.geom, b.geom) = 1 )
               AND ST_INTERSECTS(a.geom, b.geom) = 1
               AND b.ftr_idn = c.ftr_idn
          GROUP BY a.cellid
		]]>
	</select>
	<update id="updateGridDrainSRI" parameterType="SNSriGridVO">
		<![CDATA[
			UPDATE sdm_SriGrid
               SET drainSri   = #{sri}
                 , drainGrade = #{grade}
                 , lastUpdate = #{lastUpdate}
             WHERE cellID = #{cellID}
		]]>
	</update>
	<select id="selectGridSubwaySRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT a.cellid
			     , MAX(c.met_sri) as sri
			  FROM sdm_SriGrid a
                 , sdm_SubwayLine b
                 , sdm_SubwayLineSri c
             WHERE a.cellid IN (SELECT b.cellid
                                  FROM sdm_SubwayLine a
                                     , sdm_SriGrid b
                                 WHERE a.ftr_idn = #{geoID}
                                   AND ST_INTERSECTS(a.geom, b.geom) = 1 )
               AND ST_INTERSECTS(a.geom, b.geom) = 1
               AND b.ftr_idn = c.ftr_idn
          GROUP BY a.cellid
		]]>
	</select>
	<update id="updateGridSubwaySRI" parameterType="SNSriGridVO">
		<![CDATA[
			UPDATE sdm_SriGrid
               SET subwaySri   = #{sri}
                 , subwayGrade = #{grade}
                 , lastUpdate  = #{lastUpdate}
             WHERE cellID = #{cellID}
		]]>
	</update>
	<select id="selectGridStationSRI" parameterType="SNSriVO" resultType="egovMap">
		<![CDATA[
			SELECT a.cellid
			     , MAX(c.sta_sri) as sri
			  FROM sdm_SriGrid a
                 , sdm_SubwayStation b
                 , sdm_SubwayStationSri c
             WHERE a.cellid IN (SELECT b.cellid
                                  FROM sdm_SubwayStation a
                                     , sdm_SriGrid b
                                 WHERE a.ftr_idn = #{geoID}
                                   AND ST_INTERSECTS(a.geom, b.geom) = 1 )
               AND ST_INTERSECTS(a.geom, b.geom) = 1
               AND b.ftr_idn = c.ftr_idn
          GROUP BY a.cellid
		]]>
	</select>
	<update id="updateGridStationSRI" parameterType="SNSriGridVO">
		<![CDATA[
			UPDATE sdm_SriGrid
               SET stationSri   = #{sri}
                 , stationGrade = #{grade}
                 , lastUpdate   = #{lastUpdate}
             WHERE cellID = #{cellID}
		]]>
	</update>
	
	<insert id="insertAssessValues" parameterType="SNAssessValueVO">
		<![CDATA[
			INSERT INTO sdm_AssessValue (
						category
					  , type
					  , date
					  , value
					  , longitude
					  , latitude
					  , altitude
					  , position
					  )
				VALUES (
					    #{category}
					  , #{type}
					  , #{date}
					  , #{value}
					  , #{longitude}
					  , #{latitude}
					  , #{altitude}
					  , ST_POINTFROMTEXT('POINT(${longitude} ${latitude})',0)
					  )  
		]]>
	</insert>
	
	<select id="retrieveAssessValues" parameterType="SNAssessValueVO" resultType="egovMap">
		<![CDATA[
			SELECT type
				 , date
				 , value
				 , longitude
				 , latitude
				 , altitude
			  FROM sdm_AssessValue
			 WHERE category = #{category}
			   AND ST_INTERSECTS(ST_GEOMFROMTEXT('POLYGON((${minX} ${minY}, ${maxX} ${minY}, ${maxX} ${maxY}, ${minX} ${maxY}, ${minX} ${minY}))',0), position) = 1
			   AND type != 'risk'
		]]>
	</select>
	
	<select id="retrieveRiskValues" parameterType="SNAssessValueVO" resultType="egovMap">
		<![CDATA[
			SELECT category
				 , date
				 , value
				 , longitude
				 , latitude
				 , altitude
			  FROM sdm_AssessValue
			 WHERE category IN (${category})
			   AND ST_INTERSECTS(ST_GEOMFROMTEXT('POLYGON((${minX} ${minY}, ${maxX} ${minY}, ${maxX} ${maxY}, ${minX} ${maxY}, ${minX} ${minY}))',0), position) = 1
			   AND type = 'risk'
		]]>
	</select>
	
	<select id="selectNearestGeoObject" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT ftr_cde    AS ftrcde
			     , ftr_idn    AS ftridn
			     , ST_X(geom) AS X
			     , ST_Y(geom) AS Y
			  FROM ${geoTable}
			 WHERE ST_NEAREST(geom, ST_POINTFROMTEXT('POINT(${X} ${Y})',0),1) = 1 
		]]>
	</select>
	<select id="selectExistingNodeGeoRel" parameterType="SNNodeVO" resultType="egovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_NodeGeoRel
			 WHERE nodeGID = #{GID}
			   AND ftr_cde = #{ftr_cde}
			   AND ftr_idn = #{ftr_idn}
			   AND endTime = #{endTime} 
		]]>
	</select>
	<update id="updateOldNodeGeoRel" parameterType="SNNodeVO">
		<![CDATA[
			UPDATE sdm_NodeGeoRel
			   SET endTime = #{currentTime}
			 WHERE nodeGID = #{GID}
			   AND endTime = #{endTime}
		]]>
	</update>
	<insert id="insertNodeGeoRel" parameterType="SNNodeVO">
		<![CDATA[
			INSERT INTO sdm_NodeGeoRel
			           (nodeGID
			          , startTime
			          , endTime
			          , ftr_cde
			          , ftr_idn
			          , gwID
			          , panID
			          , snID
			          , position )
			    VALUES (#{GID}
			          , #{currentTime}
			          , #{endTime}
			          , #{ftr_cde}
			          , #{ftr_idn}
			          , (SELECT gwID  FROM sdm_Node WHERE GID = #{GID}) 
			          , (SELECT panID FROM sdm_Node WHERE GID = #{GID}) 
			          , (SELECT snID  FROM sdm_Node WHERE GID = #{GID})
			          , ST_POINTFROMTEXT('POINT(${X} ${Y})',0)
			          )
		]]>
	</insert>
	<update id="updateNodeGeoID" parameterType="SNNodeVO">
		<![CDATA[
			UPDATE sdm_Node
			   SET ftr_cde   = #{ftr_cde}
			     , ftr_idn   = #{ftr_idn}
			     , longitude = #{longitude}
			     , latitude  = #{latitude}
			     , position  = ST_POINTFROMTEXT('POINT(${X} ${Y})',0) 
			 WHERE GID = #{GID}
		]]>
	</update>
	
	<select id="selectExistingRfid" parameterType="RfidVO" resultType="EgovMap">
		<![CDATA[
			SELECT NVL(MAX('Y'),'N') AS existYn
			  FROM sdm_Rfid
			 WHERE rfid = #{rfid}
		]]>
	</select>
	<insert id="insertRfid" parameterType="RfidVO">
		<![CDATA[
			INSERT INTO sdm_Rfid
			           (rfid
			          , latitude
			          , longitude
			          , state
			          , strength )
			    VALUES (#{rfid}
			          , #{latitude}
			          , #{longitude}
			          , #{state}
			          , #{strength}
			          )
		]]>
	</insert>
	<update id="updateRfid" parameterType="RfidVO">
		<![CDATA[
			UPDATE sdm_Rfid
			   SET latitude  = #{latitude}
			     , longitude = #{longitude}
			     , state     = #{state}
			     , strength  = #{strength}
			 WHERE rfid = #{rfid}
		]]>
	</update>
	<select id="selectRfidState" parameterType="RfidVO" resultType="EgovMap">
		<![CDATA[
			SELECT state
			  FROM sdm_Rfid
			 WHERE rfid = #{rfid}
		]]>
	</select>
	<update id="updateRfidState" parameterType="RfidVO">
		<![CDATA[
			UPDATE sdm_Rfid
			   SET state    = #{state}
			     , strength = #{strength} 
			 WHERE rfid = #{rfid}
		]]>
	</update>
	<select id="selectRfid" parameterType="RfidVO" resultType="EgovMap">
		<![CDATA[
			SELECT rfid
			     , latitude
			     , longitude
			     , state
			     , strength
			  FROM sdm_Rfid
			 ${rfidCondition}
		]]>
	</select>
		
	<select id="selectWaterPipeGeometry" resultType="EgovMap">
		<![CDATA[
			SELECT ftr_idn AS id
				 , SUBSTR(ST_ASTEXT(geom),7,LENGTH(ST_ASTEXT(geom))-7) AS geom
			  FROM sdm_WaterPipe
		]]>
	</select>
	
	<select id="selectDrainPipeGeometry" resultType="EgovMap">
		<![CDATA[
			SELECT ftr_idn AS id
				 , SUBSTR(ST_ASTEXT(geom),7,LENGTH(ST_ASTEXT(geom))-7) AS geom
			  FROM sdm_DrainPipe
		]]>
	</select>
	<select id="selectDrainManholeGeometry" resultType="EgovMap">
		<![CDATA[
			SELECT ftr_idn AS id
				 , SUBSTR(ST_ASTEXT(geom),7,LENGTH(ST_ASTEXT(geom))-7) AS geom
			  FROM sdm_DrainManhole
		]]>
	</select>
	
</mapper>